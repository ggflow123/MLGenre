# Yuanzhe Liu
# dataScript.py
# Changing the parameters and the data from the file generated by generate_dataset.py
# python3 dataset.py filename

import sys
import pandas as pd
import operator

def ReadData(filename, tem):
    # Read in the data. tem: True or False:
    # True: Categorize tempo. False: Not Categorize tempo
    # return: dataframe
    data2 = pd.read_csv(filename)
    attributes = list(data2.columns)  # the list of attribute
    listlabel = data2[data2.columns[0]]
    labelList = listlabel.tolist()
    data = pd.DataFrame()

    for i in range(len(attributes)):
        if attributes[i] == 'tempo' and tem:
            t = data2['tempo']
            tempolist = []
            for j in range(len(t)):
                newtempo = CategorizeTempo(t[j])
                tempolist.append(newtempo)
            data['tempo'] = tempolist
        else:
            data = pd.concat([data, data2[attributes[i]]], axis=1)
    # labels = list(dict.fromkeys(labelList))

    return data, attributes, listlabel

def frequencyCount(arr):
    # takes in an array and return a dictionary
    # key: contents in the array. Value: count of the key in the array
    dic = dict()
    for x in arr:
        if x in dic.keys():
            dic[x] += 1
        else:
            dic[x] = 1
    return dic

def GetNewLabels(dic):
    # Get 10 most frequent labels in the dataset, return these labels
    sort = sorted(dic.items(), key=operator.itemgetter(1), reverse=True)
    maintained = sort[:10]
    newlabels = []
    for i in maintained:
        newlabels.append(i[0])
    return newlabels

'''
Drop the rows where the label is not in the list: newlabels'''
def DropSomeData(data, newlabels):
    tracker = 0
    for index, row in data.iterrows():
        # print(index)
        for i in newlabels:
            if i == row.label:
                # print(row.label)
                tracker = 1
                break
        if tracker == 0:
            # print('hello')
            data = data.drop(index=index)
        tracker = 0
    return data

def ChangeDataValue(data):
    # the function to categorize tempo in the data
    # return data with categorized tempo
    for index, row in data.iterrows():
        tempo = row.tempo
        newtempo = CategorizeTempo(tempo)
        print(data.at[index, 'tempo'])
        data.at[index, 'tempo'] = data.at[index, 'tempo'].astype(str)
        data.at[index, 'tempo'] = newtempo
        # print(newtempo, row.tempo)
    return data


def CategorizeTempo(tempo):
    if tempo <= 40:
        return 'Grave'
    elif tempo > 40 and tempo <= 60:
        return 'Largo'
    elif tempo > 60 and tempo <= 76:
        return 'Adagio'
    elif tempo > 76 and tempo <= 108:
        return 'Andante'
    elif tempo > 108 and tempo <= 120:
        return 'Moderato'
    elif tempo > 120 and tempo <= 168:
        return 'Allegro'
    elif tempo > 168 and tempo <= 200:
        return 'Presto'
    elif tempo > 200:
        return 'Prestissimo'

def DeleteAttributes(*args, data):
    for attribute in args:
        data = data.drop([attribute], axis=1)
    return data

def main():
    filename = sys.argv[1]
    tem = True
    data, attributes, labels = ReadData(filename, tem)
    print(data)
    dic = frequencyCount(labels)
    newlabels = GetNewLabels(dic)

    # print(newdata)
    #listAttributes = ['loudness']
    #data = DeleteAttributes(*listAttributes, data=data)
    data = DropSomeData(data, newlabels)
    # print(newdata)
    #newdata['tempo'] = newdata['tempo'].astype(str)
    #newdata = ChangeDataValue(newdata)

    data.to_csv('small_data.csv', index=None)

if __name__ == '__main__':
    main()
